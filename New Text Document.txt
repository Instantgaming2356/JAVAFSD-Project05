***************************************************************
STEP:1 AWS UBUNTU INSTANCE
***************************************************************
1. PREPARE AWS INSTANCE(UBUNTU SERVER 22.04 LTS (HVM) ,SSD VOLUME TYPE)
2. SERCURITY : ADD PORT NO :80 WITH CUSTOM TCP IP
3. DOWNLOAD  .PEM KEY TO CONNECT YOUR INSTANCE WITH YOUR LOCAL MACHINE USING MOBA X-TERM


**************************************************************
STEP:2 CONNECT USING MOBA X-TERM
**************************************************************
OPEN MOB X-TERM 
> cd d:    //d: is my drive
> cd phase-5   //phase-5 is my folder where i have copied .pem key

> goto >aws>instance>choose your  instance>connect>ssh>copy the example key>

>open moba x-term >right click> enter

***************************************************************
STEP:3 DOCKER INSTALLATION ON UBUNTU OS
***************************************************************
goto>Google>Docker Installation on Ubuntu OS


link:https://docs.docker.com/engine/install/ubuntu/
----------------------------------------------------------------

> sudo apt-get update

> sudo apt-get install ca-certificates curl gnupg lsb-release

> sudo mkdir -m 0755 -p /etc/apt/keyrings
> curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

> echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

> sudo apt-get update

> sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

1. TO  VERIFY THE INSTALLTION
--------------------------------------

> sudo docker -v
		OUTPUT:Docker version 23.0.1, build a5ee5b1
> sudo docker --version

> sudo docker info

2. TO LIST DOCKER CONTAINERS
--------------------------------------
> sudo docker container ls

3. TO LIST THE DOCKER IMAGES
---------------------------------------
> sudo docker images

4. To DEPLOY A DOCKER IMAGE
----------------------------------------
> docker build -t <docker_image>

> docker run -p 9090:8082 <docker_image>

STEP:4 INSTALL JDK
***************************************************************************************************************
> sudo apt-get update
> sudo apt install default-jdk -y

to verify the installtion

> java --version 

***************************************************************************************************************
STEP:5 MAVEN INSTALLION
***************************************************************************************************************

> sudo apt-get update
> sudo apt install maven -y

***************************************************************************************************************
STEP:6 JENKINS INSTALLATION
***************************************************************************************************************

---------------------------------------------------------------------------------------------------------------

> curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null

> echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null

> sudo apt-get update

> sudo apt-get install jenkins


1. TO START WITH JENKINS
----------------------------------

> sudo service jenkins start

> sudo service jenkins status


CONNECT: GOTO>AWS>EC2>copy public ip address of your instance:8080 on browser and hit enter


2. TO GENERATE SECRET PASSWORD
------------------------------------
> sudo cat /var/lib/jenkins/secrets/initialAdminPassword


3. TO GIVE PERMISSION FOR ALL
------------------------------------

> sudo chmod 777 /var/run/docker.sock

4. FOR INITIAL CREDENTIALS AND BASIC SETUP
---------------------------------------

1. CLICK ON INSTALL SUGGESTED PLUGINS
2. PROVIDE YOUR CREDENTIALS
3. WELCOME TO JENKINS
4. MANAGE PLUGINS>INSTALL SUGGESTED PLUGINS>AVAILABLE PLUGINS>MAVEN INTEGRATION >CLICK ON INSTALL WITHOUT RESTART

5. PREPARE FREESTYLE PROJECT(CI-CONTINUOUS INTEGRATION)
----------------------------------------------------------
1. GOTO>DASHBOARD>create>new job>select free style project>give any name>click on ok
2. give description
3. source code manangement 
	GIT:
	URL:https://github.com/Nikunj-Java/docker_master.git
	BRANCHES TO BUILD: */master or */main
4. Build trigger
	Poll SCM
	H/2 * * * *
5. click on apply and save

6. Build The project

6. AFTER JENKINS INSTALLATION
--------------------------------------------------------
1. Got to manage jenkins>>configure clouds and install docker and docker pipeline.
2. Create a freestyle project and go to advanced pipeline.
3. Integrate github and docker hub repository credentials.

7. DEPLOYMENT OF SPRING BOOT APPLICATION
-----------------------------------------
1. Goto public_ip_address of AWS EC2 instance and move to port 9090 to access its API CRUD Operations using Postman and Swagger-UI. 


